[{
	"title": "Quiz",
	"activityType": "quiz",
	"questions": [{
			"questionType": "mcq",
			"questionText": [{
				"text": "What does a neuron compute?"
			}],
			"max_marks": "1",
			"options": [{
					"option": "A neuron computes a linear function (z = Wx + b) followed by an activation function",
					"correct": true
				},

				{
					"option": "A neuron computes the mean of all features before applying the output to an activation function",
					"correct": false
				},

				{
					"option": "A neuron computes a function g that scales the input x linearly (Wx + b)",
					"correct": false
				},

				{
					"option": "A neuron computes an activation function followed by a linear function (z = Wx + b)",
					"correct": false
				}

			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect. There is no mean applied in a neuron."
		},

		{
			"questionType": "mcq",
			"questionText": [{
					"text": "Which of these is the \"Logistic Loss\"?"
				},
				{
					"image": {
						"imageSRC": "image-1.png",
						"imageName": "Figure-1"
					}
				},
				{
					"image": {
						"imageSRC": "image-2.png",
						"imageName": "Figure-2"
					}
				},
				{
					"image": {
						"imageSRC": "image-3.png",
						"imageName": "Figure-3"
					}
				},
				{
					"image": {
						"imageSRC": "image-4.png",
						"imageName": "Figure-4"
					}
				}

			],
			"max_marks": "1",
			"options": [{
					"option": "Figure-1",
					"correct": true
				},

				{
					"option": "Figure-2",
					"correct": false
				},

				{
					"option": "Figure-3",
					"correct": false
				},

				{
					"option": "Figure-4",
					"correct": false
				}


			],
			"correct_feedback": "Correct, this is the logistic loss you've seen in lecture!",
			"wrong_feedback": "Incorrect"
		},



		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Suppose img is a (32,32,3) array, representing a 32x32 image with 3 color channels red, green and blue. How do you reshape this into a column vector?"
			}],
			"max_marks": "1",
			"options": [{
					"option": "x = img.reshape((3,32*32))",
					"correct": false
				},

				{
					"option": "x = img.reshape((1,32*32,*3))",
					"correct": false
				},
				{
					"option": "x = img.reshape((32*32,3))",
					"correct": false
				},
				{
					"option": "x = img.reshape((32*32*3,1))",
					"correct": true
				}

			],
			"correct_feedback": "correct",
			"wrong_feedback": "Incorrect"
		},



		{
			"questionType": "mcq",
			"questionText": [{
					"text": "Consider the two following random arrays \"a\" and \"b\":"
				},
				{
					"image": {
						"imageSRC": "image-5.png",
						"imageName": ""
					}
				},
				{
					"text": "What will be the shape of \"c\"?"
				}
			],
			"max_marks": "1",
			"options": [{
					"option": "The computation cannot happen because the sizes don't match. It's going to be \"Error\"!",
					"correct": false
				},

				{
					"option": "c.shape = (3, 2)",
					"correct": false
				},
				{
					"option": "c.shape = (2, 3)",
					"correct": true
				},
				{
					"option": "c.shape = (2, 1)",
					"correct": false
				}

			],
			"correct_feedback": "Correct. Yes! This is broadcasting. b (column vector) is copied 3 times so that it can be summed to each column of a.",
			"wrong_feedback": "Incorrect"
		},



		{
			"questionType": "mcq",
			"questionText": [{
					"text": "Consider the two following random arrays \"a\" and \"b\":"
				},
				{
					"image": {
						"imageSRC": "image-6.png",
						"imageName": ""
					}
				},
				{
					"text": "What will be the shape of \"c\"?"
				}
			],
			"max_marks": "1",
			"options": [{
					"option": "c.shape = (3, 3)",
					"correct": false
				},

				{
					"option": "The computation cannot happen because the sizes don't match. It's going to be \"Error\"!",
					"correct": true
				},
				{
					"option": "c.shape = (4, 3)",
					"correct": false
				},
				{
					"option": "c.shape = (4, 2)",
					"correct": false
				}

			],
			"correct_feedback": "Correct. Indeed! In numpy the \"*\" operator indicates element-wise multiplication. It is di erent from \"np.dot()\". If you would try \"c = np.dot(a,b)\" you would get c.shape = (4, 2).",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Suppose you have n <sub>x</sub> input features per example. Recall that X=[x<sup>(1)</sup>x<sup>(2)</sup>....x<sup>(m)</sup>] the dimension of X?"
			}],
			"max_marks": "1",
			"options": [{
					"option": "(1, m)",
					"correct": false
				},

				{
					"option": "(n<sub>x</sub>, m)",
					"correct": true
				},
				{
					"option": "(m, n<sub>x</sub> )",
					"correct": false
				},
				{
					"option": "(m, 1)",
					"correct": false
				}

			],
			"correct_feedback": "Correct ",
			"wrong_feedback": "Incorrect"
		}, {
			"questionType": "mcq",
			"questionText": [{
					"text": "Recall that \"np.dot(a,b)\" performs a matrix multiplication on a and b, whereas \"a*b\" performs an element-wise multiplication.Consider the two following random arrays \"a\" and \"b\":"
				},
				{
					"image": {
						"imageSRC": "image-7.png",
						"imageName": ""
					}
				},
				{
					"text": "What will be the shape of \"c\"?"
				}
			],
			"max_marks": "1",
			"options": [{
					"option": "c.shape = (12288, 150)",
					"correct": false
				},

				{
					"option": "The computation cannot happen because the sizes don't match. It's going to be \"Error\"!",
					"correct": false
				},
				{
					"option": "c.shape = (12288, 45)",
					"correct": true
				},
				{
					"option": "c.shape = (150,150)",
					"correct": false
				}

			],
			"correct_feedback": "Correct. Correct, remember that a np.dot(a, b) has shape (number of rows of a, number of columns of b). The sizes match because : \"number of columns of a = 150 = number of rows of b\"",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
					"text": "Consider the following code snippet:"
				},
				{
					"image": {
						"imageSRC": "image-8.png",
						"imageName": ""
					}
				},
				{
					"text": "How do you vectorize this?"
				}
			],
			"max_marks": "1",
			"options": [{
					"option": "c = a + b.T",
					"correct": true
				},

				{
					"option": "c = a.T + b.T",
					"correct": false
				},
				{
					"option": "c = a + b",
					"correct": false
				},
				{
					"option": "c = a.T + b",
					"correct": false
				}

			],
			"correct_feedback": "Correct.",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
					"text": "Consider the following code:"
				},
				{
					"image": {
						"imageSRC": "image-9.png",
						"imageName": ""
					}
				},
				{
					"text": "What will be c? (If you’re not sure, feel free to run this in python to nd out)."
				}
			],
			"max_marks": "1",
			"options": [{
					"option": "This will invoke broadcasting, so b is copied three times to become (3,3), and ∗ is an element-wise product so c.shape will be (3, 3)",
					"correct": true
				},

				{
					"option": "This will invoke broadcasting, so b is copied three times to become (3, 3), and ∗ invokes a matrix multiplication operation of two 3x3 matrices so c.shape will be (3, 3)",
					"correct": false
				},
				{
					"option": "This will multiply a 3x3 matrix a with a 3x1 vector, thus resulting in a 3x1 vector. That is, c.shape = (3,1).",
					"correct": false
				},
				{
					"option": "It will lead to an error since you cannot use “*” to operate on these two matrices. You need to instead use np.dot(a,b)",
					"correct": false
				}

			],
			"correct_feedback": "Correct.",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
					"text": "Consider the following computation graph."
				},
				{
					"image": {
						"imageSRC": "image-10.png",
						"imageName": ""
					}
				},
				{
					"text": "What is the output J?"
				}
			],
			"max_marks": "1",
			"options": [{
					"option": "J = (c - 1)*(b + a)",
					"correct": false
				},

				{
					"option": "J = (a - 1) * (b + c)",
					"correct": true
				},
				{
					"option": "J = a*b + b*c + a*c",
					"correct": false
				},
				{
					"option": "J = (b - 1) * (c + a)",
					"correct": false
				}

			],
			"correct_feedback": "Correct. Yes. J = u + v - w = a*b + a*c - (b + c) = a * (b + c) - (b + c) = (a - 1) * (b + c).",
			"wrong_feedback": "Incorrect"
		}
	]
}]